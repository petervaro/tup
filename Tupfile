## INFO ##
## INFO ##

#----- VARIABLES --------------------------------------------------------------#
cyan    = \e[36;1m
none    = \e[0m
arrow   = ==>
prompt  = $(cyan)$(arrow)$(none)
Tupfile = main-tup-file
CWD     = $(TUP_CWD)
&build  = build.py


#----- CONSTANTS --------------------------------------------------------------#
arch = @(TUP_ARCH)
ARCH = $(CONFIG_TUP_ARCH)


#----- RULES  -----------------------------------------------------------------#
# Empty rule
:|>|>

# Without outputs
: Tupfile      |> printf "$(prompt) I'm doing nothing with '%f'!\n" |>
: *.py         |> printf "$(prompt) Python files: '%f'\n"           |>
: foreach *.py |> printf "$(prompt) Python file: '%f'\n"            |>


#----- CONDITIONALS -----------------------------------------------------------#
ifneq ($(arch),$(ARCH))
    error 'arch' and 'ARCH' should be the same
else
    : |> printf "$(prompt) Config consts are matching: $(arch), $(ARCH)\n" |>
endif

ifdef FOO
    : |> printf "$(prompt) CONFIG_FOO is defined in tup.config\n" |>
endif


#----- MACROS -----------------------------------------------------------------#
# Empty macro
!e=|>|>

# Macros with ^-flags and %-flags
!m1 = |> ^c $(arrow) %f^ printf "Hello, Caret-flags\n" |>
!m2 = |> ^o $(arrow) %f^ printf "Hello, Caret-flags\n" |>
!m3 = |> ^  $(arrow) %f^ printf "Hello, Caret-flags\n" |>
!mm = |> printf "$(%f)\n" |>

# Macros in rules
: Tupfile |> !m3 |>
: Tupfile |> !mm |>


#----- INVALID EXPRESSIONS  ---------------------------------------------------#
ifeq (this,that)
    #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
    : |> |> {bin} <group> anything-else
    #             ^^^^^^^
    #             Invalid: group after bin

    #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
    : |> |> {bin} {bin2} anything-else
    #             ^^^^^^
    #             Invalid: bin after bin

    #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
    : |> |> <group> <group2> {bin} anything-else
    #               ^^^^^^^^
    #               Invalid: group after group

    #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
    : |> |> <group> {bin} <group2> anything-else
    #                     ^^^^^^^^
    #                     Invalid: group after group + bin
endif
