<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
		Copyright (C) 2015 - 2016 Peter Varo
		&lt;http://github.com/petervaro/tup&gt;

		This program is free software: you can redistribute it
		and/or modify it under the terms of the GNU General
		Public License as published by the Free Software
		Foundation, either version 3 of the License, or (at your
		option) any later version.

		This program is distributed in the hope that it will be
		useful, but WITHOUT ANY WARRANTY; without even the
		implied warranty of MERCHANTABILITY or FITNESS FOR A
		PARTICULAR PURPOSE. See the GNU General Public License
		for more details.

		You should have received a copy of the GNU General Public
		License along with this program, most likely a file in
		the root directory, called "LICENSE". If not, see
		&lt;http://www.gnu.org/licenses&gt;.
	</string>
	<key>fileTypes</key>
	<array>
		<string>Tupfile</string>
		<string>tup</string>
	</array>
	<key>name</key>
	<string>tup</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?&lt;!\\)^\s*#</string>
			<key>end</key>
			<string>(?&lt;!\\)\n</string>
			<key>name</key>
			<string>comment.line.hashmark.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
					<key>name</key>
					<string>comment.line.hashmark.line_continuation.tup</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(!)(.+?)\s*(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.macro.prefix.tup</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.macro.variable.tup</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.macro.assignment.tup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!\\)\n|$</string>
			<key>name</key>
			<string>meta.macro.definition.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;==)</string>
					<key>end</key>
					<string>(?=(?&lt;!\\)\n|$)</string>
					<key>name</key>
					<string>string.unquoted.input.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.group.tup</string>
								</dict>
							</dict>
							<key>match</key>
							<string>&lt;(.+?)&gt;</string>
							<key>name</key>
							<string>keyword.operator.group.tup</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.bin.tup</string>
								</dict>
							</dict>
							<key>match</key>
							<string>{(.+?)}</string>
							<key>name</key>
							<string>keyword.operator.bin.tup</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\|&gt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.arrow.tup</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(?&lt;!\\)\n|$)</string>
							<key>name</key>
							<string>string.unquoted.command.tup</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(\|&gt;)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.arrow.tup</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=(?&lt;!\\)\n|$)</string>
									<key>name</key>
									<string>string.unquoted.command.tup</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>{(.+?)}</string>
											<key>beginCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>storage.type.bin.tup</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=(?&lt;!\\)\n|$)</string>
											<key>name</key>
											<string>keyword.operator.bin.tup</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>match</key>
													<string>&lt;.+?&gt;.*</string>
													<key>name</key>
													<string>invalid.illegal.group_after_bin.tup</string>
												</dict>
												<dict>
													<key>match</key>
													<string>{.+?}.*</string>
													<key>name</key>
													<string>invalid.illegal.bin_after_bin.tup</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#io_string</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>begin</key>
											<string>&lt;(.+?)&gt;</string>
											<key>beginCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>storage.modifier.group.tup</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=(?&lt;!\\)\n|$)</string>
											<key>name</key>
											<string>keyword.operator.group.tup</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>match</key>
													<string>&lt;.+?&gt;.*</string>
													<key>name</key>
													<string>invalid.illegal.group_after_group.tup</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>{(.+?)}</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>storage.type.bin.tup</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=(?&lt;!\\)\n|$)</string>
													<key>name</key>
													<string>keyword.operator.bin.tup</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>match</key>
															<string>&lt;.+?&gt;.*</string>
															<key>name</key>
															<string>invalid.illegal.group_after_bin.tup</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#io_string</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#io_string</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#io_string</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#caret_flags</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#cmd_string</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#io_string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#io_string</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.rule.tup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!\\)\n|$</string>
			<key>name</key>
			<string>meta.rule.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=:)\s*(foreach\b)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.iteration.tup</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?&lt;!\\)\n|$)</string>
					<key>name</key>
					<string>string.unquoted.inputs.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.group.tup</string>
								</dict>
							</dict>
							<key>match</key>
							<string>&lt;(.+?)&gt;</string>
							<key>name</key>
							<string>keyword.operator.group.tup</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.bin.tup</string>
								</dict>
							</dict>
							<key>match</key>
							<string>{(.+?)}</string>
							<key>name</key>
							<string>keyword.operator.bin.tup</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\|&gt;)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.arrow.tup</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(?&lt;!\\)\n|$)</string>
							<key>name</key>
							<string>string.unquoted.command.tup</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(\|&gt;)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.arrow.tup</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=(?&lt;!\\)\n|$)</string>
									<key>name</key>
									<string>string.unquoted.command.tup</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>{(.+?)}</string>
											<key>beginCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>storage.type.bin.tup</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=(?&lt;!\\)\n|$)</string>
											<key>name</key>
											<string>keyword.operator.bin.tup</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>match</key>
													<string>&lt;.+?&gt;.*</string>
													<key>name</key>
													<string>invalid.illegal.group_after_bin.tup</string>
												</dict>
												<dict>
													<key>match</key>
													<string>{.+?}.*</string>
													<key>name</key>
													<string>invalid.illegal.bin_after_bin.tup</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#io_string</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>begin</key>
											<string>&lt;(.+?)&gt;</string>
											<key>beginCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>storage.modifier.group.tup</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?=(?&lt;!\\)\n|$)</string>
											<key>name</key>
											<string>keyword.operator.group.tup</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>match</key>
													<string>&lt;.+?&gt;.*</string>
													<key>name</key>
													<string>invalid.illegal.group_after_group.tup</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>{(.+?)}</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>storage.type.bin.tup</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=(?&lt;!\\)\n|$)</string>
													<key>name</key>
													<string>keyword.operator.bin.tup</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>match</key>
															<string>&lt;.+?&gt;.*</string>
															<key>name</key>
															<string>invalid.illegal.group_after_bin.tup</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#io_string</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#io_string</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#io_string</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#caret_flags</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#cmd_string</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#io_string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>^\s*(else|endif|include_rules|\.gitignore)$</string>
			<key>name</key>
			<string>keyword.control.no_arg.tup</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(run|include|export)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.single_arg.tup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!\\)\n|$</string>
			<key>name</key>
			<string>string.unquoted.single_arg.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cmd_string</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.single_arg.const.tup</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.conf_var.tup</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(ifn?def)\s*(.+?)$</string>
			<key>name</key>
			<string>string.unquoted.single_arg.const.tup</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.single_arg.no_eval.tup</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(error)(\s+.*?)?((?&lt;!\\)\n|$)</string>
			<key>name</key>
			<string>string.unquoted.single_arg.no_eval.tup</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(ifn?eq)\s+\(\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.tup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)|(?&lt;!\\)\n|$</string>
			<key>name</key>
			<string>meta.control.double_args.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\()\s*</string>
					<key>end</key>
					<string>\s*(?=,)</string>
					<key>name</key>
					<string>string.unquoted.lval.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cmd_string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=,)</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.control.double_args.separator.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=,)</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>string.unquoted.rval.tup</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cmd_string</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^\s*&amp;?)(.+?)((:|\+)?=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.and_variable.tup</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.tup</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!\\)\n|$</string>
			<key>name</key>
			<string>meta.assignment.variable.tup</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;==)</string>
					<key>end</key>
					<string>(?=(?&lt;!\\)\n|$)</string>
					<key>name</key>
					<string>string.unquoted.value.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#io_string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>caret_flags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\^(c|o|\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.flags.caret.tup</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\^</string>
					<key>name</key>
					<string>constant.character.flags.caret.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#percent_flags</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cmd_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#percent_flags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macros</string>
				</dict>
			</array>
		</dict>
		<key>io_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.order_only_separator.tup</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#wildcards</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#percent_flags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macros</string>
				</dict>
			</array>
		</dict>
		<key>macros</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.macro.prefix.tup</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.macro.variable.tup</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(!(?!\s))(.+?)\b</string>
					<key>name</key>
					<string>meta.macro.invocation.tup</string>
				</dict>
			</array>
		</dict>
		<key>percent_flags</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%(f|b|B|e|o|O|d|g)</string>
					<key>name</key>
					<string>string.interpolated.flags.percent.tup</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.variable.special.dollar.tup</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.variable.special.at.tup</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$\((TUP_CWD)|@\((TUP_(PLATFORM|ARCH)))\)</string>
					<key>name</key>
					<string>keyword.operator.reference.special.tup</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.conf_var.tup</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.conf_var.tup</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@\(|\$\((CONFIG_))(.+?)\)</string>
					<key>name</key>
					<string>keyword.operator.reference.at.tup</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.reference.dollar.tup</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.reference.dollar.tup</string>
						</dict>
					</dict>
					<key>name</key>
					<string>variable.tup_variable.tup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#percent_flags</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>wildcards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\*|\?|\[.+?\]</string>
					<key>name</key>
					<string>constant.character.wildcard.tup</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.tup</string>
	<key>uuid</key>
	<string>F0C79525-E092-4B6B-9A4E-185453A89AE4</string>
</dict>
</plist>
